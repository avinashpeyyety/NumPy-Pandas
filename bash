###############################################################
#Find and Fetch value from external file and assign to variable
###############################################################
RUNTYPECD=`grep "RUNTYPECD" $FF_SELF_HEALING_PARTITIONS_OUT | head -1 | cut -d'=' -f2`
STARTPARTITIONID=`grep "STARTPARTITIONID" $FF_SELF_HEALING_PARTITIONS_OUT | head -1 | cut -d'=' -f2`
ENDPARTITIONID=`grep "ENDPARTITIONID" $FF_SELF_HEALING_PARTITIONS_OUT | head -1 | cut -d'=' -f2`

############################################################################################
#Find variables in external file and replace their assignment with values from current file
############################################################################################
echo "Updating ${PROJ_JOBPARAMS_FILE} file with START_PARTITION_ID=$STARTPARTITIONID, END_PARTITION_ID=$ENDPARTITIONID, RUN_TYPE_CD=$RUNTYPECD"
sed -i "/\$\$START_PARTITION_ID/c\$\$START_PARTITION_ID=$STARTPARTITIONID" ${PROJ_JOBPARAMS_FILE}
sed -i "/\$\$END_PARTITION_ID/c\$\$END_PARTITION_ID=$ENDPARTITIONID" ${PROJ_JOBPARAMS_FILE}
sed -i "/\$\$RUN_TYPE_CD/c\$\$RUN_TYPE_CD=$RUNTYPECD" ${PROJ_JOBPARAMS_FILE}

##################################
#Handle input arguments mismatch
#################################
if (( $# == 2 ));
then
    TargetDatabase=`echo $1 | awk '{print toupper($0)}'`
    dbAlias=`echo $2 | awk '{print toupper($0)}'`
elif (( $# == 0 ));
then
    TargetDatabase=ABCDE
    dbAlias=XYZ
else
    echo "Incorrect number of Variables, this script requires the parameters Target Database(example: ppcdmdb) and DB Alias(example: ads) to be passed"
    exit 1
fi

################################################
# DB_CONNECT & GET_TABLE_COLUMNS &  Query Tables
##################################################
TargetSchema=ADMIN

dbConfigScript="$VB_HOME/CommonScripts/config/dbconfig.sh"
dbConfigText="$VB_HOME/CommonScripts/config/dbconfig.txt"
. $dbConfigScript $dbAlias $dbConfigText

# Get the COLUMNS that exist on the target System (prevents an error when new column is added on source system, but wasn't added on target system)
tableListSQL="select tablename, columnname from (select tablename from ${TargetDatabase}.${TargetSchema}._v_table where (tablename like 'PQR' or tablename like 'ABC' or tablename like 'XYZ')) t left outer join (select name, attname as columnname, attnum as columnnumber from ${TargetDatabase}.${TargetSchema}._v_relation_column where type='TABLE' and (format_type in ('INTEGER','BIGINT'))) f on t.tablename=f.name order by tablename, columnnumber "
echo $tableListSQL
java Runsql "$tableListSQL" > ${tableColumnsFile}

# Create a .sql file for each table in the target
while IFS= read -r LINE; do
  sql1=`echo $LINE | awk -F~ -v db="$TargetDatabase" -v schema="$TargetSchema" '{ print "select count(*) from "db"."schema"."$1" where "$2" = -1 or "$2" is null"; }'`
  sql2=`echo $LINE | awk -F~ -v db="$TargetDatabase" -v schema="$TargetSchema" '{ print "select count(*) from "db"."schema"."$1""; }'`
  table=`echo $LINE | awk -F~ '{print $1}'`
  field=`echo $LINE | awk -F~ '{print $2}'`
  echo $sql1
  echo $sql2
  default_count=`java Runsql "${sql1}"`
  total_count=`java Runsql "${sql2}"`
  percentage_default=$(echo "scale=2; $default_count * 100 / $total_count" | bc )
    echo "percentage default keys: ${percentage_default}"
  echo "${percentage_default}~${table}~${field}" >> ${outFile}
done < "${tableColumnsFile}"

cat ${outFile} | sort -g > ${tableColumnsFile}

############################
# Create HTML Email
############################
> ${outFile}
echo "To: avinash.peyyety@internal" >> ${outFile}
echo "Subject: Percentage Default Keys for ${TargetDatabase}" >> ${outFile}
echo "Mime-Version: 1.0" >> ${outFile}
echo "Content-Type: text/html" >> ${outFile}
echo "Body:" >> ${outFile}
echo "<html>" >> ${outFile}
echo "<table border=1>" >> ${outFile}
echo "<tr><td><b>Table</b></td><td><b>Field</b></td><td><b>Percentage Default/Null Keys</b></td></tr>" >> ${outFile}

while IFS= read -r LINE; do
  percentage_default=`echo $LINE | awk -F~ '{print $1}'`
  table=`echo $LINE | awk -F~ '{print $2}'`
  field=`echo $LINE | awk -F~ '{print $3}'`
  echo "<tr><td>${table}</td><td>${field}</td><td>${percentage_default}"%"</td></tr>" >> ${outFile}
done < "${tableColumnsFile}"
echo "</table>" >> ${outFile}
echo "<br><br>" >> ${outFile}
echo "==========================================================================================================" >> ${outFile}
echo "<br>This email was generated by ${scriptsDir}/$0<br>" >> ${outFile}
echo "</html>" >> ${outFile}

############################
# Send Email
############################
/usr/sbin/sendmail -t -oi < ${outFile}
exit 0

